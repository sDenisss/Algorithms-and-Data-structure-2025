using System;
using System.Collections.Generic;
using System.Text;

class ChainHashing
{
    private const long p = 1000000007;
    private const long x = 263;
    private LinkedList<string>[] table;
    private int m;

    public ChainHashing(int m)
    {
        this.m = m;
        table = new LinkedList<string>[m];
        for (int i = 0; i < m; i++)
            table[i] = new LinkedList<string>();
    }

    private int Hash(string s)
    {
        long hash = 0;
        for (int i = s.Length - 1; i >= 0; i--)
            hash = (hash * x + s[i]) % p;
        return (int)(hash % m);
    }

    public void Add(string s)
    {
        int index = Hash(s);
        if (!table[index].Contains(s))
            table[index].AddFirst(s);
    }

    public void Delete(string s)
    {
        int index = Hash(s);
        table[index].Remove(s);
    }

    public string Find(string s)
    {
        int index = Hash(s);
        return table[index].Contains(s) ? "yes" : "no";
    }

    public string Check(int i)
    {
        if (table[i].Count == 0)
            return "";
        
        var sb = new StringBuilder();
        foreach (var s in table[i])
        {
            if (sb.Length > 0)
                sb.Append(' ');
            sb.Append(s);
        }
        return sb.ToString();
    }
}

class Program
{
    static void Main()
    {
        int m = int.Parse(Console.ReadLine());
        int n = int.Parse(Console.ReadLine());
        
        ChainHashing ch = new ChainHashing(m);
        
        for (int i = 0; i < n; i++)
        {
            string[] parts = Console.ReadLine().Split(new[] { ' ' }, 2);
            string cmd = parts[0];
            string arg = parts[1];
            
            switch (cmd)
            {
                case "add":
                    ch.Add(arg);
                    break;
                case "del":
                    ch.Delete(arg);
                    break;
                case "find":
                    Console.WriteLine(ch.Find(arg));
                    break;
                case "check":
                    Console.WriteLine(ch.Check(int.Parse(arg)));
                    break;
            }
        }
    }
}